on: [push]
jobs:
  JmeterDockerRun:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Start JMeter Slave Containers
        run: |
          # Start three JMeter slave containers without requiring SSL
          docker run -d --name jmeter-slave1 --network host justb4/jmeter:5.5 -Djava.rmi.server.hostname=localhost -Jserver.port=1099 -Jclient.rmi.localport=40000 -Djavax.net.ssl.trustStore="" -Djavax.net.ssl.trustStorePassword=""
          docker run -d --name jmeter-slave2 --network host justb4/jmeter:5.5 -Djava.rmi.server.hostname=localhost -Jserver.port=1099 -Jclient.rmi.localport=40001 -Djavax.net.ssl.trustStore="" -Djavax.net.ssl.trustStorePassword=""
          docker run -d --name jmeter-slave3 --network host justb4/jmeter:5.5 -Djava.rmi.server.hostname=localhost -Jserver.port=1099 -Jclient.rmi.localport=40002 -Djavax.net.ssl.trustStore="" -Djavax.net.ssl.trustStorePassword=""

      - name: Wait for Slaves to Start
        run: |
          # Wait for a few seconds to ensure the slave containers are fully up
          sleep 10

      - name: Build and run JMeter Master Container
        run: |
          # Run the JMeter master to execute the test
          docker run --rm -v "${{ github.workspace }}:/tests" justb4/jmeter:5.5 -n -t /tests/tests/S01_SimpleExample.jmx -l /tests/results.jtl -R localhost,localhost,localhost

      - name: Upload JMeter Results
        uses: actions/upload-artifact@v3
        with:
          name: jmeter-results
          path: results.jtl
